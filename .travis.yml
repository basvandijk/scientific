# This file has been generated -- see https://github.com/hvr/multi-ghc-travis
language: c
sudo: false

matrix:
  include:
    #- env: CABALVER=1.18 GHCVER=7.0.4 NOTESTS=YES
    #  compiler: ": #GHC 7.0.4"
    #  addons: {apt: {packages: [cabal-install-1.18,ghc-7.0.4], sources: [hvr-ghc]}}
    #- env: CABALVER=1.18 GHCVER=7.2.2 NOTESTS=YES
    # compiler: ": #GHC 7.2.2"
    #  addons: {apt: {packages: [cabal-install-1.18,ghc-7.2.2], sources: [hvr-ghc]}}
    #- env: CABALVER=1.18 GHCVER=7.4.2
    #  compiler: ": #GHC 7.4.2"
    #  addons: {apt: {packages: [cabal-install-1.18,ghc-7.4.2], sources: [hvr-ghc]}}
    #- env: CABALVER=1.18 GHCVER=7.6.3
    #  compiler: ": #GHC 7.6.3"
    #  addons: {apt: {packages: [cabal-install-1.18,ghc-7.6.3], sources: [hvr-ghc]}}
    - env: CABALVER=1.18 GHCVER=7.8.4
      compiler: ": #GHC 7.8.4"
      addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.3
      compiler: ": #GHC 7.10.3"
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3], sources: [hvr-ghc]}}
    - env: CABALVER=1.24 GHCVER=8.0.1
      compiler: ": #GHC 8.0.1"
      addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1], sources: [hvr-ghc]}}
    - env: CABALVER=head GHCVER=head
      compiler: ": #GHC head"
      addons: {apt: {packages: [cabal-install-head,ghc-head], sources: [hvr-ghc]}}

  allow_failures:
    - env: CABALVER=head GHCVER=head

before_install:
 - unset CC
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
 - cabal update
 - if [ "$NOTEST" = "1" ]; then export CABALOPTS=""; else export CABALOPTS="--enable-tests"; fi

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - cabal install --only-dependencies $CABALOPTS

script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal configure $CABALOPTS -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - if [ ! "$NOTEST" = "1" ]; then cabal test; fi
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated

# Check that the resulting source distribution can be built & installed.
# If there are no other `.tar.gz` files in `dist`, this can be even simpler:
# `cabal install --force-reinstalls dist/*-*.tar.gz`
 - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
   (cd dist && cabal install --force-reinstalls "$SRC_TGZ")

# EOF
